{"version":3,"file":"HighscoresController.js","sourceRoot":"","sources":["../../src/controllers/HighscoresController.ts"],"names":[],"mappings":";;;;AAAA,yCAA2E;AAC3E,iCAAgC;AAChC,6DAAwD;AACxD,yCAAuE;AAGvE,MAAM,OAAO;IAGX,EAAE,CAAS;IAGX,KAAK,CAAS;IAGd,IAAI,CAAS;CACd;AAPC;IAFC,iBAAQ,EAAE;IACV,eAAM,CAAC,WAAW,CAAC;;mCACT;AAGX;IADC,iBAAQ,EAAE;;sCACG;AAGd;IADC,iBAAQ,EAAE;;qCACE;AAIf,IAAa,eAAe,GAA5B,MAAa,eAAe;IAEhB,MAAM,CAAgB;IAKhC,KAAK,CAAC,OAAO,CAAmB,EAAU;QACxC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,EAAC,KAAK,EAAE,EAAC,EAAE,EAAC,EAAC,CAAC,CAAC;IAC1D,CAAC;IAKD,KAAK,CAAC,UAAU,CAAmC,IAAgB;QACjE,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IACrD,CAAC;IAKD,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC3C,CAAC;CACF,CAAA;AAtBC;IADC,WAAM,EAAE;sCACS,6BAAa;+CAAC;AAKhC;IAHC,YAAG,CAAC,MAAM,CAAC;IACX,gBAAO,CAAC,2BAA2B,CAAC;IACpC,gBAAO,CAAC,GAAG,EAAE,OAAO,CAAC;IACP,mBAAA,mBAAU,CAAC,IAAI,CAAC,CAAA;;;;8CAE9B;AAKD;IAHC,aAAI,CAAC,GAAG,CAAC;IACT,gBAAO,CAAC,kCAAkC,CAAC;IAC3C,gBAAO,CAAC,GAAG,EAAE,OAAO,CAAC;IACJ,mBAAA,mBAAU,EAAE,CAAA;IAAE,mBAAA,eAAM,CAAC,UAAU,CAAC,CAAA;;;;iDAEjD;AAKD;IAHC,YAAG,CAAC,GAAG,CAAC;IACR,gBAAO,CAAC,uBAAuB,CAAC;IAChC,CAAC,gBAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;;;;+CAGjC;AAvBU,eAAe;IAD3B,mBAAU,CAAC,aAAa,CAAC;GACb,eAAe,CAwB3B;AAxBY,0CAAe","sourcesContent":["import {BodyParams, Controller, Get, PathParams, Post} from \"@tsed/common\";\nimport {Inject} from \"@tsed/di\";\nimport {PrismaService} from \"../services/PrismaService\";\nimport {Groups, Required, Email, Returns, Summary} from \"@tsed/schema\";\nimport {highscores} from \"@prisma/client\";\n\nclass hsModel implements highscores {\n  @Required()\n  @Groups(\"!creation\")\n  id: number;\n\n  @Required()\n  score: number;\n\n  @Required()\n  name: string;\n}\n\n@Controller(\"/highscores\")\nexport class UsersController {\n  @Inject()\n  protected prisma: PrismaService;\n\n  @Get(\"/:id\")\n  @Summary(\"Return a user by his name\")\n  @Returns(200, hsModel)\n  async getUser(@PathParams(\"id\") id: number) {\n    return this.prisma.highscores.findUnique({where: {id}});\n  }\n\n  @Post(\"/\")\n  @Summary(\"Upload a new highscore of a user\")\n  @Returns(201, hsModel)\n  async signupUser(@BodyParams() @Groups(\"creation\") user: highscores) {\n    return this.prisma.highscores.create({data: user});\n  }\n\n  @Get(\"/\")\n  @Summary(\"Return a list of User\")\n  @(Returns(200, Array).Of(hsModel))\n  getUsers() {\n    return this.prisma.highscores.findMany();\n  }\n}"]}